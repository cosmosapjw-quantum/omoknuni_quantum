Successfully loaded C++ game implementations from alphazero_py module
INFO:__main__:Starting QFT-MCTS benchmarks...
INFO:__main__:
Benchmarking gomoku...
INFO:__main__:  Testing classical MCTS...
INFO:mcts.gpu.optimized_cuda_kernels:Using optimized Triton kernels for GPU acceleration
INFO:mcts.gpu.optimized_cuda_kernels:Triton kernels compiled successfully
INFO:mcts.gpu.csr_gpu_kernels_optimized:Using custom CUDA kernels for maximum performance
INFO:mcts.gpu.csr_tree:Initialized optimized CSR GPU kernels
INFO:mcts.gpu.optimized_wave_engine:CUDA graph optimization available (applied selectively)
INFO:mcts.quantum.interference:Using GPU-accelerated MinHash interference
INFO:mcts.quantum.phase_policy:Using GPU-accelerated quantum phase kicks
INFO:mcts.quantum.path_integral:Using GPU-accelerated path integral formulation
INFO:mcts.gpu.optimized_cuda_kernels:Using optimized Triton kernels for GPU acceleration
INFO:mcts.gpu.optimized_cuda_kernels:Triton kernels compiled successfully
INFO:__main__:    100 sims: 16506.4 sims/sec
INFO:mcts.gpu.csr_tree:Initialized optimized CSR GPU kernels
INFO:mcts.gpu.optimized_wave_engine:CUDA graph optimization available (applied selectively)
INFO:mcts.quantum.interference:Using GPU-accelerated MinHash interference
INFO:mcts.quantum.phase_policy:Using GPU-accelerated quantum phase kicks
INFO:mcts.quantum.path_integral:Using GPU-accelerated path integral formulation
INFO:mcts.gpu.optimized_cuda_kernels:Using optimized Triton kernels for GPU acceleration
INFO:mcts.gpu.optimized_cuda_kernels:Triton kernels compiled successfully
INFO:__main__:    500 sims: 80491.3 sims/sec
INFO:mcts.gpu.csr_tree:Initialized optimized CSR GPU kernels
INFO:mcts.gpu.optimized_wave_engine:CUDA graph optimization available (applied selectively)
INFO:mcts.quantum.interference:Using GPU-accelerated MinHash interference
INFO:mcts.quantum.phase_policy:Using GPU-accelerated quantum phase kicks
INFO:mcts.quantum.path_integral:Using GPU-accelerated path integral formulation
INFO:mcts.gpu.optimized_cuda_kernels:Using optimized Triton kernels for GPU acceleration
INFO:mcts.gpu.optimized_cuda_kernels:Triton kernels compiled successfully
INFO:__main__:    Move confidence: 0.004
INFO:mcts.gpu.csr_tree:Initialized optimized CSR GPU kernels
INFO:mcts.gpu.optimized_wave_engine:CUDA graph optimization available (applied selectively)
INFO:mcts.quantum.interference:Using GPU-accelerated MinHash interference
INFO:mcts.quantum.phase_policy:Using GPU-accelerated quantum phase kicks
INFO:mcts.quantum.path_integral:Using GPU-accelerated path integral formulation
INFO:mcts.gpu.optimized_cuda_kernels:Using optimized Triton kernels for GPU acceleration
INFO:mcts.gpu.optimized_cuda_kernels:Triton kernels compiled successfully
INFO:mcts.gpu.csr_tree:Initialized optimized CSR GPU kernels
INFO:mcts.gpu.optimized_wave_engine:CUDA graph optimization available (applied selectively)
INFO:mcts.quantum.interference:Using GPU-accelerated MinHash interference
INFO:mcts.quantum.phase_policy:Using GPU-accelerated quantum phase kicks
INFO:mcts.quantum.path_integral:Using GPU-accelerated path integral formulation
INFO:mcts.gpu.optimized_cuda_kernels:Using optimized Triton kernels for GPU acceleration
INFO:mcts.gpu.optimized_cuda_kernels:Triton kernels compiled successfully
INFO:mcts.gpu.csr_tree:Initialized optimized CSR GPU kernels
INFO:mcts.gpu.optimized_wave_engine:CUDA graph optimization available (applied selectively)
INFO:mcts.quantum.interference:Using GPU-accelerated MinHash interference
INFO:mcts.quantum.phase_policy:Using GPU-accelerated quantum phase kicks
INFO:mcts.quantum.path_integral:Using GPU-accelerated path integral formulation
INFO:mcts.gpu.optimized_cuda_kernels:Using optimized Triton kernels for GPU acceleration
INFO:mcts.gpu.optimized_cuda_kernels:Triton kernels compiled successfully
INFO:mcts.gpu.csr_tree:Initialized optimized CSR GPU kernels
INFO:mcts.gpu.optimized_wave_engine:CUDA graph optimization available (applied selectively)
INFO:mcts.quantum.interference:Using GPU-accelerated MinHash interference
INFO:mcts.quantum.phase_policy:Using GPU-accelerated quantum phase kicks
INFO:mcts.quantum.path_integral:Using GPU-accelerated path integral formulation
INFO:mcts.gpu.optimized_cuda_kernels:Using optimized Triton kernels for GPU acceleration
INFO:mcts.gpu.optimized_cuda_kernels:Triton kernels compiled successfully
/home/cosmos/omoknuni_quantum/python/mcts/gpu/optimized_wave_engine.py:896: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.detach().clone() or sourceTensor.detach().clone().requires_grad_(True), rather than torch.tensor(sourceTensor).
  policy_logits = torch.tensor(policy_logits, device=self.device)
